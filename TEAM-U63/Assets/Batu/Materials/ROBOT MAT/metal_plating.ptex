{"name":"@@1662","type":"graph","parameters":{},"node_position":{"x":0,"y":0},"seed":0,"seed_locked":false,"label":"Graph","shortdesc":"","longdesc":"","nodes":[{"name":"Material","type":"material","parameters":{"albedo_color":{"type":"Color","r":1,"g":1,"b":1,"a":1},"metallic":1,"roughness":1,"emission_energy":1,"normal":1,"ao":1,"depth_scale":0.5,"flags_transparent":true,"sss":0,"size":11},"node_position":{"x":1305,"y":-323},"seed":0,"seed_locked":false,"export_paths":{}},{"name":"voronoi","type":"voronoi","parameters":{"scale_x":4,"scale_y":4,"stretch_x":1,"stretch_y":1,"intensity":1,"randomness":1},"node_position":{"x":-758,"y":-136.5},"seed":0,"seed_locked":false},{"name":"tones_step","type":"tones_step","parameters":{"value":0.02,"width":0.04,"invert":false},"node_position":{"x":-415,"y":-116.5},"seed":0,"seed_locked":false},{"name":"invert","type":"invert","parameters":{},"node_position":{"x":-279,"y":-254.5},"seed":0,"seed_locked":false},{"name":"math","type":"math","parameters":{"op":19,"default_in1":0,"default_in2":0,"clamp":false},"node_position":{"x":-99,"y":-287.5},"seed":0,"seed_locked":false},{"name":"tiler_advanced","type":"tiler_advanced","parameters":{"tx":16,"ty":16,"overlap":1,"inputs":0,"translate_x":1,"translate_y":1,"rotate":0,"scale_x":0.03,"scale_y":0.03,"variations":false},"node_position":{"x":-311,"y":161.5},"seed":0,"seed_locked":false},{"name":"tones_step_2","type":"tones_step","parameters":{"value":0.13,"width":0.3,"invert":false},"node_position":{"x":-619,"y":102.5},"seed":0,"seed_locked":false},{"name":"height_to_offset","type":"height_to_offset","parameters":{"target":0.38},"node_position":{"x":-653,"y":265.5},"seed":0,"seed_locked":false},{"name":"shape","type":"shape","parameters":{"shape":1,"sides":6,"radius":0.83,"edge":0.1},"node_position":{"x":-760,"y":748.5},"seed":0,"seed_locked":false},{"name":"buffer_2","type":"buffer","parameters":{"size":10},"node_position":{"x":-946,"y":271.5},"seed":0,"seed_locked":false,"version":1},{"name":"tones_step_3","type":"tones_step","parameters":{"value":0.24,"width":0,"invert":true},"node_position":{"x":-373,"y":-2.5},"seed":0,"seed_locked":false},{"name":"shape_2","type":"shape","parameters":{"shape":0,"sides":6,"radius":0.85,"edge":1},"node_position":{"x":-515,"y":749.5},"seed":0,"seed_locked":false},{"name":"math_2","type":"math","parameters":{"op":20,"default_in1":0,"default_in2":1.57,"clamp":false},"node_position":{"x":-346,"y":732.5},"seed":0,"seed_locked":false},{"name":"math_3","type":"math","parameters":{"op":2,"default_in1":0,"default_in2":0.5,"clamp":false},"node_position":{"x":166,"y":-298.5},"seed":0,"seed_locked":false},{"name":"invert_2","type":"invert","parameters":{},"node_position":{"x":-29,"y":160.5},"seed":0,"seed_locked":false},{"name":"blend","type":"blend","parameters":{"blend_type":2,"amount":0.1},"node_position":{"x":459,"y":-276.5},"seed":0,"seed_locked":false},{"name":"buffer_3","type":"buffer","parameters":{"size":11},"node_position":{"x":-39,"y":-0.5},"seed":0,"seed_locked":false,"version":1},{"name":"normal_map2","type":"normal_map2","parameters":{"param2":0,"size":11,"strength":1,"buffer":1},"node_position":{"x":842,"y":-95.5},"seed":0,"seed_locked":false},{"name":"sphere","type":"sphere","parameters":{"cx":0.5,"cy":0.5,"r":0.5},"node_position":{"x":27,"y":705.5},"seed":0,"seed_locked":false},{"name":"gradient","type":"gradient","parameters":{"repeat":1,"rotate":0,"gradient":{"type":"Gradient","points":[{"pos":0.4,"r":1,"g":1,"b":1,"a":1},{"pos":0.45,"r":0.3125,"g":0.3125,"b":0.3125,"a":1},{"pos":0.55,"r":0.3125,"g":0.3125,"b":0.3125,"a":1},{"pos":0.6,"r":1,"g":1,"b":1,"a":1}],"interpolation":1}},"node_position":{"x":31,"y":568.5},"seed":0,"seed_locked":false},{"name":"math_4","type":"math","parameters":{"op":13,"default_in1":0,"default_in2":0,"clamp":false},"node_position":{"x":302,"y":599.5},"seed":0,"seed_locked":false},{"name":"custom_uv","type":"custom_uv","parameters":{"inputs":0,"sx":0.4,"sy":0.4,"rotate":180,"scale":0,"variations":false},"node_position":{"x":297,"y":286.5},"seed":0,"seed_locked":false},{"name":"colorize","type":"colorize","parameters":{"gradient":{"type":"Gradient","points":[{"pos":0,"r":0,"g":0,"b":0,"a":1},{"pos":0.009091,"r":0.5,"g":0.5,"b":0.5,"a":1},{"pos":1,"r":1,"g":1,"b":1,"a":1}],"interpolation":1}},"node_position":{"x":608,"y":290.5},"seed":0,"seed_locked":false},{"name":"math_5","type":"math","parameters":{"op":14,"default_in1":0,"default_in2":0,"clamp":false},"node_position":{"x":497,"y":-65.5},"seed":0,"seed_locked":false},{"name":"graph_6","type":"graph","parameters":{"param0":11,"param1":0.1,"param2":15,"param3":0.08,"param4":4,"param5":1},"node_position":{"x":860,"y":65.5},"seed":6741,"seed_locked":false,"label":"HBAO","shortdesc":"","longdesc":"","nodes":[{"name":"voronoi_3","type":"shader","parameters":{"radius":0.1,"angleBiasDeg":15,"intensity":1,"depth_scale":0.08,"quality":4},"node_position":{"x":-600.80072,"y":-894.601807},"seed":49449,"seed_locked":false,"shader_model":{"code":"","global":"","inputs":[{"default":"0.0","function":true,"label":"","name":"in","type":"f"}],"instance":"//inspired by:\n//http://developer.download.nvidia.com/presentations/2008/SIGGRAPH/HBAO_SIG08b.pdf\n//https://gist.github.com/dotModded/981206ae1f4e760b7348\n//https://github.com/scanberg/hbao/blob/master/resources/shaders/hbao_full_frag.glsl\n//radius - radius of influence in screen space\n//angleBiasDeg - ~minimum angle for AO\n//intensity - increase strength of caclulated AO\n//noiseScale - for randomization values\nfloat $(name)_hbao(vec2 uv, float radius, float angleBiasDeg, float intensity, vec2 noiseScale) {\n  int samplig_directions = 8;\n  int steps = int($quality);\n\n  float angleBias = 0.0174532925 * angleBiasDeg;\n\n  vec3 c_point = vec3(uv*2.0 - 1.0, $in(uv)*$depth_scale);\n  //fun with dfdx & dfdy - https://community.khronos.org/t/getting-the-normal-with-dfdx-and-dfdy/70177\n  vec3 c_normal = normalize(cross(dFdx(c_point), dFdy(c_point)));\n\n\n  float cosMaxRot = cos(6.28318530718 / float(samplig_directions));\n  float sinMaxROt = sin(6.28318530718 / float(samplig_directions));\n  \n  // it should be faster than standard rotation in each iteartion\n  mat2 deltaRotationMatrix = mat2(\n    vec2(cosMaxRot, -sinMaxROt),\n    vec2(sinMaxROt, cosMaxRot)\n  );\n  \n  // calculate starting offset, as the smallest step\n  vec2 offset_uv = vec2(1.0, 0.0) * (radius /float(steps));\n\n  //randomize angle\n  vec3 sampleNoise    = rand3(uv * noiseScale);\n  sampleNoise.xy      = sampleNoise.xy * 2.0 - vec2(1.0);\n  mat2 rotationMatrix = mat2(vec2(sampleNoise.x, -sampleNoise.y), \n                             vec2(sampleNoise.y,  sampleNoise.x));\n  \n  // apply a random rotation to the base step vector\n  offset_uv = rotationMatrix * offset_uv;\n  \n  float jitter = sampleNoise.z;\n  float occlusion = 0.0;\n  \n  for (int i = 0; i < samplig_directions; ++i) {\n    // incrementally rotate sample direction\n    offset_uv = deltaRotationMatrix * offset_uv;\n    float oldAngle   = angleBias;\n    for (int j = 0; j < steps; ++j) {\n      //add jitter & distance to offset UV\n      vec2 sample_uv     = uv + (jitter + float(j)) * offset_uv;\n      vec3 s_point     = vec3(sample_uv*2.0 - 1.0, $in(sample_uv)*$depth_scale);\n      vec3 sample_tan  = (s_point - c_point); //not sure if correct, but looks ok\n      // 90 deg - (angle between normal from current point &  sampled tangent)\n      //https://math.stackexchange.com/questions/654315/how-to-convert-a-dot-product-of-two-vectors-to-the-angle-between-the-vectors\n      float gamma = 1.57079632679 - acos(dot(c_normal, normalize(sample_tan)));\n      \n      if (gamma > oldAngle) {\n        float value = sin(gamma) - sin(oldAngle);\n        float attenuation = clamp(1.0 - pow(length(sample_tan.xy)/radius, 2.0), 0.0, 1.0);\n        occlusion += attenuation * value;\n\t\t//occlusion += value;\n        oldAngle = gamma;\n      }\n    }\n  }\n  \n  occlusion = 1.0 - occlusion / float(samplig_directions);\n  return clamp(pow(occlusion, 1.0 + intensity), 0.0, 1.0);\n}","longdesc":"A node that generates several images from a tileable voronoi noise","name":"HBAO","outputs":[{"f":"$(name)_hbao($uv,$radius, $angleBiasDeg, $intensity, vec2(16.0,16.0))","longdesc":"A color pattern that assigns a random color to each cell","shortdesc":"Random color","type":"f"}],"parameters":[{"control":"None","default":0.01,"label":"Radius","longdesc":"The scale along the X axis","max":1,"min":0,"name":"radius","shortdesc":"Scale.x","step":0.01,"type":"float"},{"control":"None","default":30,"label":"Angle Bias","longdesc":"Angle bias for AO","max":90,"min":0,"name":"angleBiasDeg","shortdesc":"Angle Bias","step":1,"type":"float"},{"control":"None","default":0.2,"label":"Intensity","longdesc":"Change intensity of AO","max":5,"min":0,"name":"intensity","shortdesc":"Intensity","step":0.01,"type":"float"},{"control":"None","default":1,"label":"Depth Scale","longdesc":"Lineary scales depth values afecting  cacluated normals & tangents","max":1,"min":0,"name":"depth_scale","shortdesc":"Depth Scale","step":0.01,"type":"float"},{"control":"None","default":4,"label":"Steps","longdesc":"Steps in given direction per ray","max":12,"min":1,"name":"quality","shortdesc":"Quality","step":1,"type":"float"}],"shortdesc":"Voronoi Noise"}},{"name":"gen_inputs","type":"ios","parameters":{},"node_position":{"x":-1338.030762,"y":-788.080872},"seed":43798,"seed_locked":false,"ports":[{"group_size":0,"longdesc":"Greyscale heightmap","name":"input","shortdesc":"Input","type":"f"}]},{"name":"gen_outputs","type":"ios","parameters":{},"node_position":{"x":-902.684204,"y":-327.282288},"seed":42623,"seed_locked":false,"ports":[{"group_size":0,"longdesc":"","name":"port0","shortdesc":"AO","type":"f"}]},{"name":"gen_parameters","type":"remote","parameters":{"param0":11,"param1":0.1,"param2":15,"param3":0.08,"param4":4,"param5":1},"node_position":{"x":-1488.979004,"y":-561.71167},"seed":58911,"seed_locked":false,"widgets":[{"label":"Size","linked_widgets":[{"node":"voronoi_2","widget":"size"},{"node":"buffer_2","widget":"size"},{"node":"buffer_5","widget":"size"},{"node":"buffer_7","widget":"size"}],"name":"param0","shortdesc":"Size","type":"linked_control"},{"label":"Radius","linked_widgets":[{"node":"voronoi_3","widget":"radius"}],"longdesc":"Affected radius of point in UV size","name":"param1","shortdesc":"Radius","type":"linked_control"},{"label":"Angle Bias","linked_widgets":[{"node":"voronoi_3","widget":"angleBiasDeg"}],"longdesc":"Minimum angle on heightmap for AO to occur. Angle is calculated in UV space, where depth (grayscale input) is scaled by \"Depth Scale\" parameter","name":"param2","shortdesc":"Angle bias","type":"linked_control"},{"label":"Depth Scale","linked_widgets":[{"node":"voronoi_3","widget":"depth_scale"}],"longdesc":"Lineary scales depth values afecting  cacluated normals & tangents","name":"param3","shortdesc":"Depth Scale","type":"linked_control"},{"label":"Quality","linked_widgets":[{"node":"voronoi_3","widget":"quality"}],"longdesc":"Number of steps per direction sampling","name":"param4","shortdesc":"Quality","type":"linked_control"},{"label":"Intensity","linked_widgets":[{"node":"voronoi_3","widget":"intensity"}],"longdesc":"Change intensity of calculated AO","name":"param5","shortdesc":"Intensity","type":"linked_control"}]},{"name":"voronoi_2","type":"shader","parameters":{"size":11,"sigma":3,"ksigma":4,"threshold":0.7},"node_position":{"x":-710.111145,"y":-596.459534},"seed":38722,"seed_locked":false,"shader_model":{"code":"","global":"","inputs":[{"default":"0.0","function":true,"label":"","name":"in","type":"rgba"}],"instance":"//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n//  Copyright (c) 2018-2019 Michele Morrone\n//  All rights reserved.\n//\n//  https://michelemorrone.eu - https://BrutPitt.com\n//\n//  me@michelemorrone.eu - brutpitt@gmail.com\n//  twitter: @BrutPitt - github: BrutPitt\n//  \n//  https://github.com/BrutPitt/glslSmartDeNoise/\n//\n//  This software is distributed under the terms of the BSD 2-Clause license\n//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n//  smartDeNoise - parameters\n//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n//\n//  sampler2D tex     - sampler image / texture\n//  vec2 uv           - actual fragment coord\n//  float sigma  >  0 - sigma Standard Deviation\n//  float kSigma >= 0 - sigma coefficient \n//      kSigma * sigma  -->  radius of the circular kernel\n//  float threshold   - edge sharpening threshold \nvec4 $(name)_smartDeNoise(vec2 uv, float sigma, float kSigma, float threshold)\n{\n\tfloat INV_SQRT_OF_2PI = 0.39894228040143267793994605993439; // 1.0/SQRT_OF_2PI\n\tfloat INV_PI = 0.31830988618379067153776752674503;\n    float radius = round(kSigma*sigma);\n    float radQ = radius * radius;\n\n    float invSigmaQx2 = .5 / (sigma * sigma);      // 1.0 / (sigma^2 * 2.0)\n    float invSigmaQx2PI = INV_PI * invSigmaQx2;    // 1/(2 * PI * sigma^2)\n\n    float invThresholdSqx2 = .5 / (threshold * threshold);     // 1.0 / (sigma^2 * 2.0)\n    float invThresholdSqrt2PI = INV_SQRT_OF_2PI / threshold;   // 1.0 / (sqrt(2*PI) * sigma^2)\n\n    vec4 centrPx = $in(uv); \n\n    float zBuff = 0.0;\n    vec4 aBuff = vec4(0.0);\n    vec2 size = vec2($size, $size);\n\n    vec2 d;\n    for (d.x=-radius; d.x <= radius; d.x++) {\n        float pt = sqrt(radQ-d.x*d.x);       // pt = yRadius: have circular trend\n        for (d.y=-pt; d.y <= pt; d.y++) {\n            float blurFactor = exp( -dot(d , d) * invSigmaQx2 ) * invSigmaQx2PI;\n\n            vec4 walkPx =  $in(uv+d/size);\n            vec4 dC = walkPx-centrPx;\n            float deltaFactor = exp( -dot(dC, dC) * invThresholdSqx2) * invThresholdSqrt2PI * blurFactor;\n\n            zBuff += deltaFactor;\n            aBuff += deltaFactor*walkPx;\n        }\n    }\n    return aBuff/zBuff;\n}","longdesc":"A node that generates several images from a tileable voronoi noise","name":"Denoiser","outputs":[{"longdesc":"A color pattern that assigns a random color to each cell","rgba":"$(name)_smartDeNoise($uv, $sigma, $ksigma, $threshold)","shortdesc":"Random color","type":"rgba"}],"parameters":[{"default":10,"first":0,"label":"size","last":12,"longdesc":"The scale along the X axis","name":"size","shortdesc":"Scale.x","type":"size"},{"control":"None","default":0.5,"label":"Sigma","max":1,"min":0.005,"name":"sigma","step":0.1,"type":"float"},{"control":"None","default":0.5,"label":"kSigma","max":1,"min":0,"name":"ksigma","step":0.1,"type":"float"},{"control":"None","default":0.5,"label":"threshold","max":1,"min":0,"name":"threshold","step":0.1,"type":"float"}],"shortdesc":"Voronoi Noise"}},{"name":"buffer_5","type":"buffer","parameters":{"size":11},"node_position":{"x":-931.449646,"y":-724.330017},"seed":6771,"seed_locked":false,"version":1},{"name":"buffer_7","type":"buffer","parameters":{"size":11},"node_position":{"x":-948.36377,"y":-449.796295},"seed":16139,"seed_locked":false,"version":1},{"name":"buffer_2","type":"buffer","parameters":{"size":11},"node_position":{"x":-976.009644,"y":-975.5},"seed":42465,"seed_locked":false,"version":1}],"connections":[{"from":"voronoi_3","from_port":0,"to":"buffer_5","to_port":0},{"from":"voronoi_2","from_port":0,"to":"buffer_7","to_port":0},{"from":"buffer_7","from_port":0,"to":"gen_outputs","to_port":0},{"from":"gen_inputs","from_port":0,"to":"buffer_2","to_port":0},{"from":"buffer_2","from_port":0,"to":"voronoi_3","to_port":0},{"from":"buffer_5","from_port":0,"to":"voronoi_2","to_port":0}]},{"name":"fill_to_uv","type":"fill_to_uv","parameters":{"mode":0},"node_position":{"x":-342,"y":-552.5},"seed":0,"seed_locked":false},{"name":"custom_uv_2","type":"custom_uv","parameters":{"inputs":0,"sx":1,"sy":1,"rotate":180,"scale":0,"variations":false},"node_position":{"x":-33,"y":-636.5},"seed":0,"seed_locked":false},{"name":"noise_anisotropic","type":"noise_anisotropic","parameters":{"scale_x":4,"scale_y":256,"smoothness":1,"interpolation":1},"node_position":{"x":-350,"y":-798.5},"seed":0,"seed_locked":false},{"name":"colorize_2","type":"colorize","parameters":{"gradient":{"type":"Gradient","points":[{"pos":0,"r":0.289062,"g":0.289062,"b":0.289062,"a":1},{"pos":1,"r":0.335938,"g":0.335938,"b":0.335938,"a":1}],"interpolation":1}},"node_position":{"x":835,"y":-462.5},"seed":0,"seed_locked":false},{"name":"smooth_curvature2","type":"smooth_curvature2","parameters":{"param0":11,"param1":16,"param2":2,"param3":0.12,"param4":1},"node_position":{"x":788,"y":-295.5},"seed":0,"seed_locked":false}],"connections":[{"from":"voronoi","from_port":1,"to":"tones_step","to_port":0},{"from":"tones_step","from_port":0,"to":"invert","to_port":0},{"from":"invert","from_port":0,"to":"math","to_port":0},{"from":"voronoi","from_port":1,"to":"tones_step_2","to_port":0},{"from":"height_to_offset","from_port":0,"to":"tiler_advanced","to_port":4},{"from":"height_to_offset","from_port":1,"to":"tiler_advanced","to_port":5},{"from":"tones_step_2","from_port":0,"to":"buffer_2","to_port":0},{"from":"buffer_2","from_port":0,"to":"height_to_offset","to_port":0},{"from":"voronoi","from_port":1,"to":"tones_step_3","to_port":0},{"from":"tones_step_3","from_port":0,"to":"tiler_advanced","to_port":1},{"from":"shape_2","from_port":0,"to":"math_2","to_port":0},{"from":"math_2","from_port":0,"to":"tiler_advanced","to_port":0},{"from":"math","from_port":0,"to":"math_3","to_port":0},{"from":"math_3","from_port":0,"to":"blend","to_port":1},{"from":"invert_2","from_port":0,"to":"blend","to_port":0},{"from":"tiler_advanced","from_port":0,"to":"buffer_3","to_port":0},{"from":"buffer_3","from_port":0,"to":"invert_2","to_port":0},{"from":"normal_map2","from_port":0,"to":"Material","to_port":4},{"from":"sphere","from_port":0,"to":"math_4","to_port":1},{"from":"gradient","from_port":0,"to":"math_4","to_port":0},{"from":"tiler_advanced","from_port":3,"to":"custom_uv","to_port":1},{"from":"math_4","from_port":0,"to":"custom_uv","to_port":0},{"from":"custom_uv","from_port":0,"to":"colorize","to_port":0},{"from":"blend","from_port":0,"to":"math_5","to_port":0},{"from":"colorize","from_port":0,"to":"math_5","to_port":1},{"from":"math_5","from_port":0,"to":"normal_map2","to_port":0},{"from":"math_5","from_port":0,"to":"graph_6","to_port":0},{"from":"graph_6","from_port":0,"to":"Material","to_port":5},{"from":"voronoi","from_port":3,"to":"fill_to_uv","to_port":0},{"from":"fill_to_uv","from_port":0,"to":"custom_uv_2","to_port":1},{"from":"noise_anisotropic","from_port":0,"to":"custom_uv_2","to_port":0},{"from":"custom_uv_2","from_port":0,"to":"colorize_2","to_port":0},{"from":"colorize_2","from_port":0,"to":"Material","to_port":2},{"from":"math_5","from_port":0,"to":"smooth_curvature2","to_port":0}]}